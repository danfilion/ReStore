{"version":3,"sources":["app/api/agent.ts","features/about/AboutPage.tsx","app/layout/LayoutComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductList.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/Header.tsx","app/errors/ServerErrors.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","defaults","baseURL","responseBody","response","data","interceptors","use","a","Promise","resolve","setTimeout","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","reject","requests","url","get","then","agent","Catalog","list","details","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","console","log","length","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","LoadingComponent","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","height","CircularProgress","size","color","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","name","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","toFixed","brand","type","CardActions","component","Link","to","ProductList","products","Grid","container","spacing","item","xs","setProducts","loading","setLoading","useEffect","finally","NotFound","Paper","Divider","ProductDetails","useParams","setProduct","parseInt","src","alt","style","width","mb","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","ContactPage","HomePage","midLinks","path","rightLinks","navStyles","textDecoration","typography","Header","darkMode","handleThemeChange","AppBar","Toolbar","NavLink","exact","Switch","checked","onChange","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","App","setDarkMode","paletteType","theme","createTheme","palette","mode","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e8f7832.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api/';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep();\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    //console.log('cauth by interceptor');\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 403:\r\n            toast.error('You are not allowed to do that!');\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: {error: data}\r\n            });\r\n            // toast.error(data.title);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: () => requests.get('products'),\r\n    details: (id: number) => requests.get(`products/${id}`)\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n    \r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErrors(error));\r\n    }\r\n\r\n    return (\r\n        // <Typography variant='h2'>\r\n        //     About page\r\n        // </Typography>\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n                <Button variant='contained' onClick={getValidationError}>Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && \r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            } \r\n        </Container>\r\n    )\r\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    return (\r\n        <Card>\r\n            <CardHeader \r\n                avatar={\r\n                <Avatar sx={{bgcolor: 'secondary.main'}}>\r\n                    {product.name.charAt(0).toUpperCase()}\r\n                </Avatar>}\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: {fontWeight: 'bold', color: 'primary.main'}\r\n                }}\r\n            />\r\n            <CardMedia\r\n               sx={{height: 140, backgroundSize: 'contain', bgcolor: 'primary.light'}}\r\n               image={product.pictureUrl}\r\n               title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\" >\r\n                    ${(product.price / 100).toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                   { product.brand  } / { product.type }\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\">Add to cart</Button>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport ProductCard from \"./ProductCard\";\r\n \r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({products}: Props) {\r\n    return (\r\n        <Grid container spacing={4}>\r\n        {\r\n          products.map((product) => (\r\n            <Grid item xs={3} key={product.id}>\r\n              <ProductCard product={product} />\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    )\r\n}","\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LayoutComponent\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport ProductList from \"./ProductList\";\r\n\r\n\r\n//export default function Catalog(props: Props) {\r\nexport default function Catalog() {\r\n  const[products, setProducts] = useState<Product[]>([]);\r\n  const[loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   fetch('http://localhost:5000/api/products')\r\n  //     .then(response => response.json())\r\n  //     .then(data => setProducts(data))\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    agent.Catalog.list().then(products => setProducts(products))\r\n    .catch(error => console.log(error))\r\n    .finally(() => setLoading(false))\r\n  }, [])\r\n\r\n  if (loading) return <LoadingComponent  message = 'Loading products...'/>\r\n\r\n  return (\r\n    <>\r\n      <ProductList products={products} />\r\n    </>\r\n  )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport agent from \"../../app/api/agent\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LayoutComponent\";\r\nimport { Product } from \"../../app/models/product\";\r\n\r\nexport default function ProductDetails() {\r\n    const {id} = useParams<{id: string}>();\r\n    const [product, setProduct] = useState<Product | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(`http://localhost:5000/api/products/${id}`)\r\n    //     .then(response => setProduct(response.data))\r\n    //     .catch(error => console.log(error))\r\n    //     .finally(() => setLoading(false));\r\n    // }, [id])\r\n\r\n    useEffect(() => {\r\n        agent.Catalog.details(parseInt(id))\r\n        .then(response => setProduct(response))\r\n        .catch(error => console.log(error))\r\n        .finally(() => setLoading(false));\r\n    }, [id])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading product...\" />\r\n\r\n    // if(!product) return <h3>Product not found</h3>\r\n    if(!product) return <NotFound />\r\n\r\n    return (\r\n        // <Typography variant='h2'>\r\n        //     {product.name}\r\n        // </Typography>\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>\r\n                    {product.name}\r\n                </Typography>\r\n                <Divider sx={{mb: 2}} />\r\n                <Typography variant='h4' color='secondary'>\r\n                    ${(product.price / 100).toFixed(2) }\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n        <Typography variant='h2'>\r\n            Contact page\r\n        </Typography>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <Typography variant='h2'>\r\n            Home page\r\n        </Typography>\r\n    )\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' },\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' },\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    return (\r\n        <AppBar position='static' sx={{ mb: 4 }}>\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant='h6' component={NavLink} to='/' exact sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={4} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <List sx={{ display: 'flex' }}>\r\n                        {rightLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","\n\nimport { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerErrors\";\nimport NotFound from \"../errors/NotFound\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Container>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/catalog' component={Catalog} />\n          <Route exact path='/catalog/:id' component={ProductDetails} />\n          <Route exact path='/about' component={AboutPage} />\n          <Route exact path='/contact' component={ContactPage} />\n          <Route path='/server-error' component={ServerError} />\n          <Route component={NotFound} />\n        </Switch>\n      </Container>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}